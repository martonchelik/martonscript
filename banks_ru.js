function appendTextIfMatch(...args) {
    let element = document.querySelector("table > tbody > tr.row.row-card_mask > td");
    let cardType = document.querySelector("table > tbody > tr.row.row-currency > td");

    for (let i = 0; i < args.length; i += 2) {
        let values = args[i];
        let text = args[i + 1];
        if (element && values.includes(element.textContent.slice(0, 6))) {
            let strong = document.createElement('strong');
            strong.textContent = ', '+text;
            cardType.appendChild(strong);
        }
    }
}
let values = ["546951", "427685",
    "427686",
    "427684",
    "427689",
    "427683",
    "427681",
    "427682",
    "427687",
    "548469",
    "548464",
    "548450",
    "548499",
    "548455",
    "548456",
    "548477",
    "548463",
    "548470",
    "548452",
    "548460",
    "548451",
    "547906",
    "547911",
    "547913",
    "547960",
    "547902",
    "547956",
    "547945",
    "547943",
    "547962",
    "547954",
    "547907",
    "547952",
    "547955",
    "547950",
    "547944",
    "547926",
    "547931",
    "547912",
    "427695",
    "427426",
    "427487",
    "427454",
    "547961",
    "427485",
    "427439",
    "427440",
    "427400",
    "427479",
    "427461",
    "427441",
    "547953",
    "427460",
    "427463",
    "427462",
    "427442",
    "547951",
    "427413",
    "427495",
    "427468",
    "427469",
    "427445",
    "427490",
    "427950",
    "427941",
    "427974",
    "427960",
    "427964",
    "427961",
    "548462",
    "427918",
    "427937",
    "548461",
    "427946",
    "427912",
    "427917",
    "427945",
    "427911",
    "427963",
    "427940",
    "427926",
    "427910",
    "427909",
    "427943",
    "427968",
    "427907",
    "427967",
    "427944",
    "427969",
    "427905",
    "427931",
    "427908",
    "427954",
    "427970",
    "427928",
    "427932",
    "427903",
    "427953",
    "427956",
    "427927",
    "427904",
    "427951",
    "427929",
    "427906",
    "427955",
    "427952",
    "427939",
    "427936",
    "427913",
    "427933",
    "427962",
    "427942",
    "427949",
    "427405",
    "427498",
    "427661",
    "427676",
    "427613",
    "427492",
    "427650",
    "427664",
    "427642",
    "427639",
    "427947",
    "427612",
    "427919",
    "427691",
    "427488",
    "427611",
    "427609",
    "427629",
    "427660",
    "427641",
    "427663",
    "427489",
    "427651",
    "427631",
    "427486",
    "427643",
    "427630",
    "427654",
    "427652",
    "427644",
    "427627",
    "427626",
    "427603",
    "427478",
    "427656",
    "427610",
    "427645",
    "427628",
    "427480",
    "427632",
    "427653",
    "427646",
    "427649",
    "427419",
    "427655",
    "427483",
    "427606",
    "427633",
    "427484",
    "427608",
    "427618",
    "427482",
    "427493",
    "427605",
    "427604",
    "427636",
    "427670",
    "427637",
    "427617",
    "427638",
    "427496",
    "427675",
    "427668",
    "427607",
    "427662",
    "427640",
    "427497",
    "427667",
    "427669",
    "546912",
    "546977",
    "548427",
    "546948",
    "427934",
    "546936",
    "546947",
    "427688",
    "546954",
    "548449",
    "548402",
    "546960",
    "546910",
    "548445",
    "546933",
    "546930",
    "548448",
    "548426",
    "546918",
    "546927",
    "546970",
    "546938",
    "548403",
    "546961",
    "546908",
    "546928",
    "546907",
    "546917",
    "546937",
    "546964",
    "546967",
    "546926",
    "546968",
    "546905",
    "546940",
    "548411",
    "546903",
    "548443",
    "548412",
    "548413",
    "546906",
    "548444",
    "546955",
    "546969",
    "546904",
    "546942",
    "548432",
    "546976",
    "546941",
    "546949",
    "546999",
    "546975",
    "546944",
    "546952",
    "546950",
    "546943",
    "548431",
    "546913",
    "546902",
    "546946",
    "546911",
    "546931",
    "546932",
    "546963",
    "546962",
    "548428",
    "546909",
    "546945",
    "546929",
    "546956",
    "427988",
    "427434",
    "427957",
    "427619",
    "427986",
    "427429",
    "427657",
    "427989",
    "543763",
    "427647",
    "427924",
    "427658",
    "427621",
    "427474",
    "427679",
    "427491",
    "427921",
    "427997",
    "427976",
    "427673",
    "547937",
    "427473",
    "427624",
    "427401",
    "427623",
    "427979",
    "427692",
    "427992",
    "427634",
    "427423",
    "427678",
    "427421",
    "427993",
    "427693",
    "427978",
    "427457",
    "427965",
    "427690",
    "547964",
    "427923",
    "427981",
    "427696",
    "427476",
    "427980",
    "427671",
    "427424",
    "427998",
    "427458",
    "427694",
    "427465",
    "427437",
    "427983",
    "427914",
    "427615",
    "427665",
    "427982",
    "427996",
    "427435",
    "427443",
    "427698",
    "427971",
    "427995",
    "427985",
    "427697",
    "427990",
    "427915",
    "427900",
    "427984",
    "427494",
    "427471", "547948",
    "427600",
    "548425",
    "547998",
    "548468",
    "547932",
    "547969",
    "427680",
    "427916",
    "427449",
    "427622",
    "427499",
    "427920",
    "427677",
    "548438",
    "515842",
    "547972",
    "546966",
    "427432",
    "427674",
    "427977",
    "427602",
    "427648",
    "548472",
    "427902",
    "427475",
    "427427",
    "427959",
    "427922",
    "546935",
    "547959",
    "427948",
    "676195",
    "548416",
    "548476",
    "547910",
    "548422",
    "548447",
    "427428",
    "548420",
    "546925",
    "548442",
    "546920",
    "548410",
    "427425",
    "547942",
    "639002",
    "547938",
    "427422",
    "427930",
    "548498",
    "427659",
    "548401",
    "427966",
    "531310",
    "547905",
    "547940",
    "547920",
    "427925",
    "546922",
    "427625",
    "546974",
    "427459",
    "427699",
    "427477",
    "546916",
    "427402",
    "546998",
    "547976",
    "547927","546927", "427952","427641", "427906", "548454", "427666", "546970", "427609", "427651", "546918", "548462", "546967", "427639","427642", "427967", "427653", "546936", "538150", "427649", "427636", "427427", "427674", "546968", "557000", "427603", "427632", "548406", "546941", "548401", "427661", "481776", "427656", "546926", "548413", "427677", "427676", "427954", "427637", "427618", "546930", "427655", "427667", "427683", "548440", "427638", "427930", "427602", "427662", "546916", "546974", "546940", "546904", "427668", "427652", "427432", "546942", "427613", "427938", "63900", "67758", "427901", "546931", "427644", "427601", "427631", "220220", "400680", "546907", "427670", "427620", "548442", "427646", "427626", "533669", "546949", "427616", "427640", "426343", "546938", "546998", "546955", "427650", "427663", "427660", "546946", "427630", "427654", "522860"];
let text = ' Сбербанк';
let values2 = ["220070", "521324 ", "437773 ", "553691", "437772", "528041"];
let text2 = ' Тинькофф';
let values3 = ["536672", "220028", "524602", "404268", "521324"];
let text3 = ' МТС';
let values4 = ["521178", "548673", "548601", "45841", "415428", "676371", "477964", "555949", "220015", "552175"];
let text4 = ' Альфа';
let values5 = ["220024", "489347","676907", "536829", "409398"];
let text5 = ' ВТБ';
let values6 = ["524614", "220039", "532814"];
let text6 = ' РОСБАНК';
let values7 = ["220027"];
let text7 = ' Совкомбанк';
let values8 = ["220156", "402910"];
let text8 = ' НОВИКОМБАНК';
let values9 = ["405870", "220029", "558620"];
let text9 = ' Открытие';
let values10 = ["220001", "424917", "676454", "404136", "220001"];
let text10 = ' Газпромбанк';
let values11 = ["220073", "469395", "489049"];
let text11 = ' QIWI BANK';
let values12 = ["440043"];
let text12 = ' Kaspi Bank';
let values13 = ["539545"];
let text13 = ' JYSAN BANK';
let values14 = ["220019", "521658"];
let text14 = ' БАНК УРАЛСИБ';
let values15 = ["440563", "440666"];
let text15 = ' Народный Банк Казахстана';
let values16 = ["537965", "510069", "447624", "220030"];
let text16 = ' Райффайзенбанк';
let values17 = ["220003", "554759"];
let text17 = ' PROMSVYAZBANK';
let values18 = ["489993"];
let text18 = ' Банк ЦентрКредит';
let values19 = ["220412", "510621"];
let text19 = ' YOOMONEY';
let values20 = ["414657"];
let text20 = ' Банк "ЗЕНИТ"';
let values21 = ["537541", "444111"];
let text21 = ' UNIVERSAL BANK "(Приват)"';
let values22 = ["220007"];
let text22 = ' GENBANK';
let values23 = ["220077"];
let text23 = ' POST BANK';
let values24 = ["220002"];
let text24 = ' РНКБ';
let values25 = ["220038", "435303"];
let text25 = ' Россельхозбанк';
let values26 = ["444077"];
let text26 = ' Simply';
let values27 = ["220100"];
let text27 = ' CENTRAL BANK OF RUSSIA';
let values28 = ["220008"];
let text28 = ' АО "АБ "РОССИЯ"';
let values29 = ["516874", "414960"];
let text29 = ' АО КБ "Приватбанк"';
let values30 = ["220026"];
let text30 = ' АО "МКБ"';
let values31 = ["220431"];
let text31 = ' Yandex Bank';
let values32 = ["489042"];
let text32 = ' AO UNICREDIT BANK';
let values33 = ["220432"];
let text33 = ' OZON?';
let values34 = ["559654"];
let text34 = ' ДБ АО "Хоум Кредит энд Финанс Банк"';
let values35 = ["220033"];
let text35 = ' Банк SANKT-PETERBURG';
let values36 = ["522223", "527269"];
let text36 = ' AVANGARD';
appendTextIfMatch(values36, text36, values35, text35, values34, text34, values33, text33,values32, text32, values31, text31, values30, text30, values29, text29, values28, text28, values27, text27, values26, text26, values25, text25, values24, text24, values23, text23, values, text, values2, text2, values3, text3, values4, text4, values5, text5, values6, text6, values7, text7, values8, text8, values9, text9, values10, text10, values11, text11, values12, text12, values13, text13, values14, text14, values15, text15, values16, text16, values17, text17, values18, text18, values19, text19, values20, text20, values21, text21, values22, text22);
/*
function MIR(...args) {
    let elementMIR = document.querySelector("table > tbody > tr.row.row-card_mask > td");
    for (let i = 0; i < args.length; i += 2) {
        let valuesMIR = args[i];
        let textMIR = args[i + 1];
        if (valuesMIR.includes(elementMIR.textContent.slice(0, 1))) {
            let strongMIR = document.createElement('strongMIR');
            strongMIR.textContent = textMIR;
            elementMIR.appendChild(strongMIR);
        }
    }
}
let valuesMIR = ["2"];
let textMIR = ' МИР';
let valuesMIR2 = ["4"];
let textMIR2 = ' Visa';
let valuesMIR3 = ["5"];
let textMIR3 = ' Mastercard';
MIR(valuesMIR, textMIR, valuesMIR2, textMIR2, valuesMIR3, textMIR3)*/
